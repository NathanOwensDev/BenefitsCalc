@page
@model BenefitsCalc.Pages.Dependents.CreateModel

@{
	ViewData["Title"] = "Create";
}



<h1>Create</h1>

<h4>Dependent</h4>
<hr />
<div class="row">
	<div class="col-md-4">
		<form method="post">
			<div asp-validation-summary="ModelOnly" class="text-danger"></div>
			<div class="form-group">
				<label asp-for="Dependent.EmployeeID" class="control-label"></label>
				<!--input asp-for="Dependent.EmployeeID" class="form-control" /-->
				<select asp-for="Dependent.EmployeeID" asp-items="Model.EmployeeIDOptions"></select>
				<span asp-validation-for="Dependent.EmployeeID" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="Dependent.FName" class="control-label"></label>
				<input asp-for="Dependent.FName" class="form-control" />
				<span asp-validation-for="Dependent.FName" class="text-danger"></span>
			</div>
			<div class="form-group">
				<label asp-for="Dependent.LName" class="control-label"></label>
				<input asp-for="Dependent.LName" class="form-control" />
				<span asp-validation-for="Dependent.LName" class="text-danger"></span>
			</div>
			<div class="form-group">
				<input type="submit" value="Create" class="btn btn-primary" />
			</div>
		</form>
	</div>
</div>

<div>
	<a asp-page="../Index">Back to List</a>
</div>

@section Scripts {
	@{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
